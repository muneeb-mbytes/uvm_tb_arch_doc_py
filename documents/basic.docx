Task: 
1)To draw the shapes using Turtle

The major shapes that are needed to construct the Testbench architecture are square and rectangle. Below is the Python script to draw square and rectangle and also connectivity

Steps:
1.Import the turtle library
2.Set the Screen color
3.Instantiate the object for Turtle
4.Set the pen color
5.Define function draw_square and draw_rect. Pass the co-ordinates,length,width and color as the input to the function 
6.Move to the desired location(co-ordinate) to draw the shape 
7.Use begin_fill and end_fill to fill in the shape

Square and rectangle

import turtle
s=turtle.Screen()
s.bgcolor("light blue") #Set the background color of the screen
ptr = turtle.Turtle()
ptr.pencolor("black")
def draw_square(x,y,l,color):   #To draw square
 ptr.fillcolor(color)
 ptr.penup()        #Pen up before moving to the desired co-ordinate          
 ptr.goto(x,y)     #To move the turtle to the co-ordinate (x,y)
 ptr.pendown()  #Pen down to start drawing
 ptr.begin_fill()  #To start filling the color
 for i in range(4):  #Repeat the below steps for 4 times to get the square
  ptr.forward(l)  #length of the square
  ptr.left(90)   #Turn toward the left by 90 degree
 ptr.end_fill()

def draw_rect(x,y,l,w,color): #To draw rectangle
 ptr.fillcolor(color) 
 ptr.penup()
 ptr.goto(x,y)  #To move the turtle to the co-ordinate (x,y)
 ptr.pendown() #Pen down to start drawing
 ptr.begin_fill() #To start filling the color
 for i in range(2): #Repeat for 2 times to complete the rectangle         
  ptr.forward(l)  #Length of the rectangle
  ptr.left(90) #Turn left by 90 degree
  ptr.forward(w) #Width of the rectangle
  ptr.left(90) #Turn left by 90 degree
 ptr.end_fill()

draw_square(-200,50,100,"red")      #Call the method by passing the  arguments (x-axis,y-axis,length,fll_color)
draw_rect(200,50,100,200,"green")  #Call the method by passing the  arguments (x-axis,y-axis,length,width,fll_color)


Square inside a square

import turtle
s=turtle.Screen()
s.bgcolor("light blue")
ptr = turtle.Turtle()
ptr.pencolor("black")
def draw_square(x,y,l,color): #Draw a square
ptr.fillcolor(color)

 ptr.penup()        #Pen up before moving to the desired co-ordinate   
       
 ptr.goto(x,y)     #To move the turtle to the co-ordinate (x,y)

 ptr.pendown()  #Pen down to start drawing

 ptr.begin_fill()  #To start filling the color

 for i in range(4):  #Repeat the below steps for 4 times to get the square

  ptr.forward(l)  #length of the square

  ptr.left(90)   #Turn toward the left by 90 degree

 draw_square(-100,50,100,"red") #Call the method by passing the parameters(x axis,y axis,length,color)

draw_square(-150,0,200,"red")#Call the method by passing the parameters(x axis,y axis,length,color)
ptr.end_fill()  #To end the color

Task: 
2)To draw the connection between 2 squares and to include text

Steps:
1.Import the turtle library
2.Set the Screen color
3.Instantiate the object for Turtle
4.Set the pen color 
5.Call the method draw_square by passing the co-ordinates, length and fill_color as parameters
6.After drawing 2 squares, call the method draw_arrow to draw the arrow head
7.Write the text at the centre of the turtle pointer by calling the method write_text by passing the co-ordinates and text 


Connecting 2 squares with an arrow head and including text

import turtle
s=turtle.Screen()   #Set the background color of the screen
s.bgcolor("light blue")
ptr = turtle.Turtle()
ptr.pencolor("black")
def draw_square(x,y,l,color):     #Draw the square
ptr.fillcolor(color)

 ptr.penup()        #Pen up before moving to the desired co-ordinate   
       
 ptr.goto(x,y)     #To move the turtle to the co-ordinate (x,y)

 ptr.pendown()  #Pen down to start drawing

 ptr.begin_fill()  #To start filling the color

 for i in range(4):  #Repeat the below steps for 4 times to get the square

  ptr.forward(l)  #length of the square

  ptr.left(90)   #Turn toward the left by 90 degree

 ptr.end_fill()

def draw_arrow():  #Draw the arrow head
 ptr.left(45)   #Turn left by 45 degree 
 ptr.backward(10) #move backward and then forward by same unit
 ptr.forward(10)
 ptr.right(90)      #Turn right by 90 degree
 ptr.backward(10) #move backward and then forward by same unit
 ptr.forward(10)
 ptr.left(45) #Move again to the original turtle position
def write_text(x,y,text):  #Write the text 
 ptr.penup()
 ptr.goto(x,y)  #Move to the co-ordinate(x,y)
 ptr.pendown()
 ptr.write(text,align="center")  #Write the text at the center of the turtle pointer
  
draw_square(-200,0,100,"red")  #Call the method by passing the  arguments (x-axis,y-axis,length,fll_color)

draw_square(100,0,100,"red") #Call the method by passing the  arguments (x-axis,y-axis,length,fll_color)

ptr.penup()
ptr.goto(-100,50)  #move to the centre of the sqaure
ptr.pendown()
ptr.forward(200)  #Connect the 2 sqaures
draw_arrow() #Call the method to draw an arrow head
write_text(0,50,"connect") #Call the method by passing the text to be written as argument

